module half (a, b, sum, carry);
  input a, b;
  output sum , carry;
  assign sum = a ^ b ;
  assign carry= (a & b);
endmodule 

module full (a, b, c, sum, carry);
  input a, b, c;
  output sum , carry;
  assign sum = a ^ b ^ c;
  assign carry= (a & b) | ( b &c ) | ( c & a );
endmodule 

module adder4bit ( a, b, sum, carry);
  input [3:0] a;
  input [3:0] b;
  wire c0, c1, c2;
  output wire [3:0] sum;
  output wire carry;
  
  half B1 (a[0], b[0], sum[0], c0);
  full B2 (a[1], b[1], c0, sum[1],c1);
  full B3 (a[2], b[2], c1, sum[2],c2);
  full B4 (a[3], b[3], c2, sum[3],carry);
endmodule
